{"version":3,"sources":["features/base/mycomponent.ts","features/redux/product/product.actions.ts","features/redux/product/product.reducer.ts","features/util/axios.service.ts","app/components/productList.tsx","app/components/prodDetail.tsx","app/pages/home.page.tsx","app/pages/error.page.tsx","App.tsx","serviceWorker.js","features/redux/reducers.ts","index.js"],"names":["MyComponent","props","state","Component","productTypes","productActions","dispatch","setRecipesList","item","type","payload","productReduces","recipesList","action","localStorage","setItem","JSON","stringify","AxiosService","url","body","this","baseUrl","axios","get","then","res","Promise","resolve","data","err","reject","post","ProductList","recipesUrl","assetsdataUrl","searchField","httpDGet","recList","componentDidMount","text","highlight","parts","split","RegExp","map","part","i","toLowerCase","style","backgroundColor","color","key","rec","searchedItemInMark","description","getHighlightedText","name","length","slice","className","id","category","src","image","alt","price","onClick","e","history","push","placeholder","value","onChange","setState","target","height","recipes","filter","r","includes","recIdx","getCardDesign","ProductListComponent","connect","withRouter","ProductDetails","lenght","getItem","parse","filteredObj","marginTop","width","borderRadius","overflowY","recipeList","home","index","findIndex","rece","isFavourite","setRecipeList","setRecipeDetails","getStyle","ProductDetailsComponent","HomePageComp","params","match","HomePage","ErrorPage","href","App","exact","path","component","htmlFor","Boolean","window","location","hostname","rootReducer","combineReducers","ReactDOM","render","StrictMode","store","initialState","createStore","storeFile","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.660a8b63.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nexport class MyComponent extends Component {\r\n\r\n    props: any;\r\n    state: any;\r\n\r\n}","export const productTypes = {\r\n    'SET_RECIPE_LIST': 'SET_RECIPE_LIST',\r\n    'SET_RECIPE_SELECTED': 'SET_RECIPE_SELECTED',\r\n    'SET_SEARCHED_REC':'SET_SEARCHED_REC'\r\n}\r\n\r\nexport const productActions = dispatch => {\r\n    return {\r\n        // dispatching plain actions\r\n        setRecipesList: (item) => dispatch({ type: productTypes.SET_RECIPE_LIST, payload: item }),\r\n    }\r\n}","import { productTypes } from './product.actions';\r\n\r\nexport const productReduces = (state: any = { recipesList: [] }, action: any) => {\r\n    switch (action.type) {\r\n        case productTypes.SET_RECIPE_LIST:\r\n            localStorage.setItem('recipesList', JSON.stringify(action.payload))\r\n            return {\r\n                ...state,\r\n                recipesList: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import axios from 'axios';\r\n\r\nexport class AxiosService {\r\n    static baseUrl = \"/assets\";\r\n\r\n    static httpGet(url, body = {}) {\r\n        url = this.baseUrl + url;\r\n        return axios.get(url, body).then((res) => { return Promise.resolve(res.data) }, (err) => { return Promise.reject(err) });\r\n    }\r\n    static httpPost(url, body = {}) {\r\n        url = this.baseUrl + url;\r\n        return axios.post(url, body).then((res) => { return Promise.resolve(res.data) }, (err) => { return Promise.reject(err) });\r\n    }\r\n    static httpDGet(url, body = {}) {\r\n        return axios.get(url, body).then((res) => { return Promise.resolve(res.data) }, (err) => { return Promise.reject(err) });\r\n    }\r\n    static httpDPost(url, body = {}) {\r\n        return axios.post(url, body).then((res) => { return Promise.resolve(res.data) }, (err) => { return Promise.reject(err) });\r\n    }\r\n\r\n}","import { MyComponent } from \"../../features/base/mycomponent\";\r\nimport { connect } from 'react-redux';\r\nimport { productReduces } from \"../../features/redux/product/product.reducer\";\r\nimport { productActions } from \"../../features/redux/product/product.actions\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { AxiosService } from \"../../features/util/axios.service\";\r\nimport './comp.scss';\r\n\r\nclass ProductList extends MyComponent {\r\n\r\n    recipesUrl = 'http://starlord.hackerearth.com/recipe';\r\n    assetsdataUrl = 'assets/recipe.json'\r\n    state = { searchField: '' };\r\n    componentDidMount(url = this.recipesUrl) {\r\n        AxiosService.httpDGet(url).then(recList => {\r\n            this.props.setRecipesList(recList);\r\n            // recipesList\r\n        }, (err) => {\r\n            if (url !== this.assetsdataUrl)\r\n                this.componentDidMount(this.assetsdataUrl);\r\n            this.props.setRecipesList([]);\r\n        })\r\n    }\r\n    getHighlightedText(text, highlight) {\r\n        // Split text on highlight term, include term itself into parts, ignore case\r\n        const parts = text.split(new RegExp(`(${highlight})`, 'gi'));\r\n        return <span>{parts.map((part, i) => part.toLowerCase() === highlight.toLowerCase() ? <b style={{ backgroundColor: 'yellow', color: 'blue' }} key={\"k\" + i}>{part}</b> : <label key={\"k\" + i}>{part}</label>)}</span>;\r\n    }\r\n    getCardDesign(rec, i) {\r\n        // style={{ background: `url(${rec?.image})` }}\r\n        let searchedItemInMark = null;\r\n        let description = rec?.description;\r\n        if (this.state.searchField) {\r\n            searchedItemInMark = this.getHighlightedText(rec?.name, this.state.searchField);\r\n        }\r\n        if (rec?.description.length > 33) {\r\n            description = rec?.description?.slice(0, 28) + '...';\r\n        }\r\n        return <div className=\"card\" key={rec?.id}>\r\n            <div className=\"card-body\">\r\n                <div id={'catagory'} className=\"text-capitalize\">    In {rec?.category}    </div>\r\n                <img className=\"card-img-top\" src={rec?.image} alt=\"Card_image\" />\r\n                <div className=\"card-dtl\" id=\"card-dtl\">\r\n                    <h4 className={ rec?.name?.length > 24 ? 'card-title lng-title' : 'card-title'}>{!this.state.searchField ? rec?.name : searchedItemInMark}</h4>\r\n                    <div> <span className=\"clock-icon\"></span> 10 Mins </div>\r\n                    <div>Price: {rec?.price}</div>\r\n                    <p className=\"card-text\">{description ?? rec?.description}.</p>\r\n                    <p className=\"btn btn-outline-primary\" onClick={e => { this.props?.history?.push('/home/' + rec?.id) }}>View Details</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n    render() {\r\n        return <div className=\"container\">\r\n            <div className=\"ownContainer\">\r\n                <div className=\"form-group has-search\">\r\n                    <span className=\"fa-search2 form-control-feedback\"></span>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search your Favourite Recipe...\"\r\n                        value={this.state.searchField} onChange={(e) => { this.setState({ ...this.state, searchField: e.target.value }) }} />\r\n                </div>\r\n                <div style={{ height: '100px' }}>\r\n                    <div id={'catagory-title'} className=\"float-right\">\r\n                        <p>CATAGORY</p>\r\n                        <h4> <strong>Pizza & Noodles</strong></h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card-columns\">\r\n                    {this.props?.recipes?.recipesList?.filter(r => r.name?.toLowerCase().includes(this.state.searchField?.toLowerCase()) || !this.state.searchField).map((rec, recIdx) => (this.getCardDesign(rec, recIdx)))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nexport const ProductListComponent = connect(productReduces, productActions)(withRouter(ProductList));","import { MyComponent } from \"../../features/base/mycomponent\";\r\nimport { connect } from 'react-redux';\r\nimport { productReduces } from \"../../features/redux/product/product.reducer\";\r\nimport { productActions } from \"../../features/redux/product/product.actions\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass ProductDetails extends MyComponent {\r\n    componentDidMount() {\r\n        if (!this.props.recipes?.recipesList?.lenght) {\r\n            let data = localStorage.getItem('recipesList');\r\n            this.props.setRecipesList(JSON.parse(true && data));\r\n        }\r\n    }\r\n    render() {\r\n        let filteredObj = this.props.recipes?.recipesList?.filter((rec, i) => { return rec.id === this.props.id });\r\n        filteredObj = filteredObj && filteredObj[0];\r\n        return <div className=\"container\">\r\n            <h2 className=\"justify-align-center\">Recipe Details</h2>\r\n            <div className=\"row\" style={{ marginTop: \"50px\" }}>\r\n                <div className=\"col-6\">\r\n                    <span className={''} onClick={() => this.props?.history?.push('/home')}><i className='fas fa-arrow-left'></i> Go Back</span>\r\n                    <div>\r\n                        <iframe width=\"520\" height=\"345\" src=\"https://www.youtube.com/embed/Xt7bGFiZnY0?controls=0\" style={{ borderRadius: '25px' }}></iframe>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"text-capitalize\">Ingredients For {filteredObj?.name} :</h1>\r\n                        <hr />\r\n                        <ul style={{ overflowY: 'auto' }}>\r\n                            <li>Full cream milk – 1 liter</li>\r\n                            <li>Lemon juice – 2 tbsp</li>\r\n                            <li>Sugar – 1 cup</li>\r\n                            <li>Water – 3 cups</li>\r\n                            <li>Cardamom – 2-3 pods</li>\r\n                        </ul>\r\n                        <h1>How To Prepare {filteredObj?.name} :</h1>\r\n                        <hr />\r\n                        <ul style={{ overflowY: 'auto' }}>\r\n                            <li> Heat milk in a pan.</li>\r\n                            <li>Remove from heat once it comes to a boil.</li>\r\n                            <li>Add lemon juice.</li>\r\n                            <li>The milk will curdle and the whey will separate.</li>\r\n                            <li>Strain the milk in a muslin cloth and collect the cheese.</li>\r\n                            <li>Run the cheese under cold water to remove the sourness from the lemon.</li>\r\n                            <li>Hang the muslin cloth for an hour to remove excess water from the cheese.</li>\r\n                            <li>Take out the cheese on the work surface and knead for 4-5 minute till it becomes smooth.</li>\r\n                            <li>Make 10-12 small balls from the cheese.</li>\r\n                            <li>Heat water, sugar and cardamon in a pan.</li>\r\n                            <li>When the water comes to a boil, add the cheese balls in the water.</li>\r\n                            <li>Cook covered for 40-45 minutes on low heat.</li>\r\n                            <li>Remove from heat and cool.</li>\r\n                            <li>Serve chilled.</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div style={{ marginTop: '345px' }}></div>\r\n                    <p className=\"font-weight-lighter text-muted\">RECIPE</p>\r\n                    <h1 className=\"display-4\">{filteredObj?.name}</h1>\r\n                    {/* <img className=\"w-100 img-fluid\" src={filteredObj?.image} /> */}\r\n                    <span>\r\n                        <div className=\"badge badge-dark text-wrap\" > 4/5 </div>\r\n                        <img className=\"rating-icon\" src=\"/assets/Icons/rating-icon.png\" />\r\n                        <img className=\"rating-icon\" src=\"/assets/Icons/rating-icon.png\" />\r\n                        <img className=\"rating-icon\" src=\"/assets/Icons/rating-icon.png\" />\r\n                        <img className=\"rating-icon\" src=\"/assets/Icons/rating-icon.png\" />\r\n                    </span>\r\n                    <p className=\"font-weight-lighter text-muted text-uppercase\">description</p>\r\n                    <p className=\"\">{filteredObj?.description}</p>\r\n                    <span>\r\n                        <span className=\"circle\">\r\n                            <p className=\"num\">8</p>\r\n                            <p className=\"sub-label\">ingredients</p>\r\n\r\n                        </span>\r\n                        <span className=\"circle\">\r\n                            <p className=\"num\">220</p>\r\n                            <p className=\"sub-label\">bucks </p>\r\n                        </span>\r\n                        <span className=\"circle\">\r\n                            <p className=\"num\">25</p>\r\n                            <p className=\"sub-label\"> minutes </p>\r\n                        </span>\r\n                    </span>\r\n                    <p className=\"fav-label\">FAVOURITE THIS PAGE\r\n <img className=\"heart-icon\" onClick={() => {\r\n                            let recipeList = this.props.home.recipeList;\r\n                            let index = recipeList?.findIndex((rece) => +rece.id === +filteredObj?.id);\r\n                            recipeList[index].isFavourite = !recipeList[index].isFavourite;\r\n                            this.props.setRecipeList(recipeList);\r\n                            this.props.setRecipeDetails(filteredObj);\r\n                        }} src={filteredObj?.isFavourite ? \"/assets/Icons/Icon feather-heart.png\" : \"/assets/Icons/Icon feather-heart-color.png\"} />\r\n                    </p>\r\n                    <h5>Add Comments</h5>\r\n                    <textarea name=\"comment\" id=\"comment\" placeholder=\"Type Something Here\" className=\"col-12 form-control\"></textarea>\r\n                    <div className=\"btn btn-secondary p-2 m-3\">ADD COMMENTS</div>\r\n                </div>\r\n            </div>\r\n            {this.getStyle()}\r\n        </div>\r\n    }\r\n\r\n    getStyle() {\r\n        return <style>{\r\n            `.rating-icon{\r\n margin-left: 3px;\r\n width: 15px;\r\n height: 15px;\r\n  }\r\n  .circle {\r\n height: 85px;\r\n width: 85px;\r\n margin-left: 25px;\r\n background-color: #000000;\r\n border-radius: 50%;\r\n display: inline-block;\r\n    }\r\n  \r\n    .circle .num{\r\n font-size: 30px;\r\n text-align: center;\r\n color: #ffff;\r\n margin-top: 5px;\r\n    }\r\n    .circle .sub-label{\r\n font-size: 8px;\r\n text-align: center;\r\n color: #ffff;\r\n margin: -15px !important;\r\n  }\r\n  \r\n  \r\n  \r\n  .heart-icon {\r\n margin-left: 5px;\r\n width: 25px;\r\n height: 25px;\r\n  }\r\n  .fav-label{\r\n margin-top: 10px;\r\n  }\r\n  \r\n  `}\r\n        </style>\r\n    }\r\n}\r\nexport const ProductDetailsComponent = connect(productReduces, productActions)(withRouter(ProductDetails));","import React from \"react\";\r\nimport { MyComponent } from \"../../features/base/mycomponent\";\r\nimport { withRouter } from \"react-router\";\r\nimport { ProductListComponent } from \"../components/productList\";\r\nimport { ProductDetailsComponent } from \"../components/prodDetail\";\r\n\r\n\r\nclass HomePageComp extends MyComponent {\r\n\r\n    render() {\r\n        return <div>\r\n            {this.state?.params}\r\n            {this.props.match.params.id ? <ProductDetailsComponent id={this.props.match.params.id} /> : <ProductListComponent />}\r\n        </div>\r\n    }\r\n\r\n}\r\nexport const HomePage = withRouter(HomePageComp);\r\n","import { Component, Fragment } from \"react\";\r\nimport React from \"react\";\r\n\r\nclass ErrorPage extends Component {\r\n\r\n    render() {\r\n        return (<Fragment>\r\n            <div className=\"page-wrap d-flex flex-row align-items-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span className=\"display-1 d-block\">404</span>\r\n                            <div className=\"mb-4 lead\">The page you are looking for was not found.</div>\r\n                            <a href=\"#\" className=\"btn btn-link\">Back to Home</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {this.getStyle()}\r\n        </Fragment>\r\n        );\r\n    }\r\n    getStyle() {\r\n        return <style >{`body {\r\n            background: #dedede;\r\n        }\r\n        .page-wrap {\r\n            min-height: 100vh;\r\n        }`}\r\n        </style>\r\n    }\r\n}\r\nexport default ErrorPage;","import React from \"react\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport { HomePage } from \"./app/pages/home.page\";\r\nimport { withRouter } from \"react-router\";\r\nimport ErrorPage from \"./app/pages/error.page\";\r\nimport './index.css';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={withRouter((props) => {\r\n          props.history.push('/home');\r\n          return <div>Hello</div>\r\n        })}></Route>\r\n        <Route exact path=\"/home/\" component={HomePage} />\r\n        <Route path={`/home/:id`} component={HomePage} />\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n      <div className=\"float-right mr-2\">\r\n        <label htmlFor=\"\" className=\" bg-black\">\r\n          Developed By: Jyotikanta <br />\r\n        CV: <a href=\"https://mycv.techknocker.xyz\" target=\"_blank\">https://mycv.techknocker.xyz</a>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { productReduces } from './product/product.reducer';\r\n\r\nimport { createStore, combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nconst rootReducer = combineReducers({\r\n    recipes: productReduces,\r\n});\r\n\r\nexport const storeFile = (initialState = {}): any => {\r\n    return createStore(rootReducer, initialState);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.scss';\r\nimport App from './App';\r\n// import store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { storeFile } from './features/redux/reducers';\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={storeFile()}>\r\n      <HashRouter >\r\n        <App />\r\n      </HashRouter >\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}